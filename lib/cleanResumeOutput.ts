/**
 * Sanitizes AI-generated resume text by removing markdown, comments, and AI annotations
 * @param raw The raw resume text from the AI
 * @returns Cleaned resume text suitable for user display
 */
export function cleanResumeOutput(raw: string): string {
  // First, try to detect if there's a clear separation between resume and AI explanation
  const possibleSeparators = [
    /\n\d+\.\s+[A-Z][^.]+?:.*?(?=\n|$)/, // Numbered list items that explain skills
    /\n\nThe (aggressive|personalized|basic) tone is achieved/i, // Tone explanations
    /\n\nThis resume (highlights|showcases|demonstrates)/i, // Resume summary explanations
    /\n\n---+\s*\n/, // Markdown separators
    /\n\n\*\*\*+\s*\n/, // Asterisk separators
    /\n\nKey skills (highlighted|addressed|matched):/i, // Skills summary
    /\n\nJob requirements (addressed|matched):/i, // Requirements summary
  ]

  let cleanedText = raw

  // Try each separator pattern to find where explanations might start
  for (const separator of possibleSeparators) {
    const match = raw.match(separator)
    if (match && match.index) {
      // Found a likely separator, trim everything after it
      cleanedText = raw.substring(0, match.index).trim()
      console.log(`Removed AI explanation starting with: "${match[0].substring(0, 30)}..."`)
      break
    }
  }

  // Apply additional cleaning to the result
  cleanedText = cleanedText
    // Remove markdown-style headers like "###", "####", etc.
    .replace(/^#+\s+.*?$/gm, "")
    // Remove single-line comments (// Comment)
    .replace(/(?<=\n)[\t ]*\/\/.*$/gm, "")
    // Remove multi-line block comments (/* ... */)
    .replace(/(?<=\n)[\t ]*\/\*[\s\S]*?\*\/[\t ]*/gm, "")
    // Remove AI annotations like: "This resume is..."
    .replace(/This resume.*?(?=\n|$)/gi, "")
    .replace(/(?<=\n)[^\w]*Generated by.*?(?=\n|$)/gi, "")
    // Handle Markdown bold formatting for headings (preserve the text, remove the ** markers)
    .replace(/\*\*(.*?)\*\*/g, "$1")
    // Remove any lines that start with numbers followed by a period (likely explanations)
    .replace(/^\d+\.\s+.*?(?=\n|$)/gm, "")
    // Trim extra newlines and whitespace
    .trim()

  return cleanedText
}
